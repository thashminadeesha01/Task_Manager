{"ast":null,"code":"var _jsxFileName = \"D:\\\\task-manager\\\\client\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  onTaskAdded\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title.trim()) return; // Prevent empty submissions\n\n    try {\n      const response = await axios.post('http://localhost:3000/api/tasks', {\n        title\n      });\n      onTaskAdded(response.data); // Notify parent component of the new task\n      setTitle(''); // Clear the input field\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Enter task...\",\n        className: \"task-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn-add\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskForm, \"MYNoGbxGn41vHCoLeDH6SYxb4UA=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TaskForm","onTaskAdded","_s","title","setTitle","handleSubmit","e","preventDefault","trim","response","post","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/task-manager/client/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction TaskForm({ onTaskAdded }) {\r\n    const [title, setTitle] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!title.trim()) return; // Prevent empty submissions\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:3000/api/tasks', { title });\r\n            onTaskAdded(response.data); // Notify parent component of the new task\r\n            setTitle(''); // Clear the input field\r\n        } catch (error) {\r\n            console.error('Error adding task:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"task-form\">\r\n            <h2>Add New Task</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    placeholder=\"Enter task...\"\r\n                    className=\"task-input\"\r\n                />\r\n                <button type=\"submit\" className=\"btn-add\">Add Task</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;;IAE3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,iCAAiC,EAAE;QAAEP;MAAM,CAAC,CAAC;MAC/EF,WAAW,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC5BP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC9C;EACJ,CAAC;EAED,oBACIb,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBhB,OAAA;MAAAgB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBpB,OAAA;MAAMqB,QAAQ,EAAEf,YAAa;MAAAU,QAAA,gBACzBhB,OAAA;QACIsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,KAAM;QACboB,QAAQ,EAAGjB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,eAAe;QAC3BX,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACFpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACjB,EAAA,CA/BQF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAiCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}